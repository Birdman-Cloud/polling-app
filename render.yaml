# Render Blueprint specification for the Polling App Monorepo
# Defines the Database, Backend Web Service, and Frontend (as Web Service)

services:
  # 1. PostgreSQL Database Service
  - type: pserv # Render type for PostgreSQL
    name: polling-db # Name for your database service on Render
    databaseName: polling_app_db # Desired database name inside PostgreSQL
    user: polling_app_user # Desired database user
    plan: free # Specify the free instance type
    region: frankfurt # Or choose another region supporting free tier (e.g., ohio, oregon, singapore)

  # 2. Backend Web Service (Node.js/Express)
  - type: web
    name: polling-backend # Name for your backend web service
    runtime: node # Specify the runtime environment
    plan: free
    region: frankfurt # Keep in the same region as the database for low latency
    autoDeploy: true # Automatically deploy on push to the specified branch
    branch: main # Or your main development branch (e.g., master)
    rootDir: backend # Specifies that the code for this service is in the 'backend' sub-directory
    healthCheckPath: / # Render will check this path to see if the service is healthy
    buildCommand: npm install # Command to install dependencies
    startCommand: npm start # Command to run the application
    envVars:
      - key: DATABASE_URL
        fromDatabase: # Automatically injects the connection string from the DB service defined above
          name: polling-db # Must match the name of the database service
          property: connectionString
      - key: NODE_ENV
        value: production # Set Node environment to production

  # 3. Frontend "Static Site" (Served via Node.js 'serve' package)
  - type: web # <-- CHANGED TYPE TO 'web'
    name: polling-frontend # Name for your frontend service
    runtime: node # We need Node.js to run the 'serve' command
    plan: free
    region: frankfurt
    autoDeploy: true
    branch: main
    rootDir: frontend # Specifies that the code for this service is in the 'frontend' sub-directory
    buildCommand: npm install && npm run build # Install deps and build the static assets
    # startCommand tells Render how to run the service after building
    # npx serve: runs the serve package (installed via npm install)
    # -s: Runs in single-page app mode (serves index.html for unknown paths)
    # dist: The directory containing the built files to serve
    # -l $PORT: Tells 'serve' to listen on the port Render provides via the $PORT env var
    startCommand: npx serve -s dist -l $PORT
    envVars: # Environment variables needed *during the build*
      - key: VITE_API_URL # The frontend needs to know the backend URL
        value: https://polling-backend.onrender.com/api # Use the public URL of the backend
    # 'routes' and 'publishDir' are not used for 'web' type serving static files this way
